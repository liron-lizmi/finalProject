{
  "errors": {
    "serverError": "Server error",
    "userExists": "User with this email already exists",
    "invalidCredentials": "Invalid username or password",
    "userNotFound": "User not found",
    "emailNotFound": "No user found with this email",
    "resetTokenInvalid": "Token is invalid or has expired",
    "samePassword": "Cannot reset password to current password. Please choose a new password",
    "resetError": "An error occurred during password reset",
    "emailRequired": "Email is required",
    "authenticationFailed": "Authentication failed, please log in again",
    "vendorNotFound": "Vendor not found",
    "vendorExistingName": "Vendor with this name already exists for this event",
    "vendorRequired": "Vendor information is required",
    "validationError": "Validation error",
    "missingParameters": "Missing required parameters",
    "databaseError": "Database error",
    "invalidFormat": "Invalid format",
    "routeNotFound": "Route not found",
    "generalError": "An error occurred. Please try again later",
    "googleInitError": "Google initialization error",
    "googleClientIdNotConfigured": "Google Client ID is not configured in environment variables",
    "unknownError": "Unknown error",
    "googleNotConnected": "Not connected to Google"
  },
  "success": {
    "passwordReset": "Password updated successfully",
    "resetLinkSent": "Password reset link sent to your email",
    "registrationComplete": "Registration completed successfully",
    "vendorAdded": "Vendor added successfully to the event",
    "vendorUpdated": "Vendor updated successfully",
    "vendorDeleted": "Vendor removed successfully from the event"
  },
  "email": {
    "sendError": "There was an error sending confirmation email, but registration was completed successfully"
  },
  "events": {
    "notFound": "Event not found",
    "deleteSuccess": "Event deleted successfully",
    "createSuccess": "Event created successfully",
    "updateSuccess": "Event updated successfully",
    "accessDenied": "Access denied to this event",
    "vendors": {
      "addSuccess": "Vendor added successfully to the event",
      "updateSuccess": "Vendor information updated successfully",
      "deleteSuccess": "Vendor removed successfully from the event",
      "notFound": "Vendor not found in this event",
      "categories": {
        "catering": "Catering",
        "photography": "Photography",
        "music": "Music",
        "decoration": "Decoration",
        "lighting": "Lighting",
        "flowers": "Flowers",
        "other": "Other"
      }
    },
    "tasks": {
      "notFound": "Task not found",
      "deleteSuccess": "Task deleted successfully",
      "updateSuccess": "Task updated successfully",
      "statusUpdateSuccess": "Task status updated successfully",
      "createSuccess": "Task created successfully",
      "calendar": {
        "sync": {
          "notConnected": "Google Calendar not connected",
          "connectionSuccess": "Google Calendar connected successfully",
          "disconnectSuccess": "Google Calendar disconnected successfully",
          "syncCompleted": "Sync completed successfully",
          "syncFailed": "Error syncing with Google Calendar",
          "eventCreated": "Event created in Google Calendar",
          "eventUpdated": "Event updated in Google Calendar",
          "eventDeleted": "Event deleted from Google Calendar"
        }
      }
    },
    "rides": {
      "updateSuccess": "Ride information updated successfully",
      "contactRecorded": "Contact details recorded successfully",
      "notFound": "Ride information not found",
      "accessDenied": "Access to this ride information is denied",
      "eventNotFound": "Event not found",
      "phoneNotFound": "Phone number not found in the guest list",
      "guestNotFound": "Guest not found",
      "rideCancelled": "Ride cancelled successfully",
      "validation": {
        "phoneRequired": "Phone number is required",
        "missingParameters": "Required parameters are missing"
      },
      "errors": {
        "serverError": "Server error"
      }
    },
    "validation": {
      "taskTitleRequired": "Task title is required",
      "taskDueDateRequired": "Due date is required",
      "taskEventRequired": "Event ID is required",
      "taskUserRequired": "User ID is required",
      "invalidTimeFormat": "Invalid time format",
      "rideStatusRequired": "Ride status is required",
      "rideAddressRequired": "Departure address is required",
      "availableSeatsRequired": "Number of available seats is required",
      "availableSeatsRange": "Number of available seats must be between 1 and 8",
      "departureTimeRequired": "Departure time is required",
      "rideNotesMax": "Notes can contain up to 300 characters",
      "contactActionRequired": "Contact action is required",
      "contactedGuestRequired": "Guest ID that was contacted is required"
    }
  },
  "auth": {
    "noToken": "No authorization, login required",
    "invalidToken": "Invalid token",
    "serverError": "Server error",
    "validationError": "Validation error",
    "missingParameters": "Missing required parameters",
    "databaseError": "Database error",
    "userNotFound": "User not found"
  },
  "validation": {
    "firstNameRequired": "First name is a required field",
    "firstNameMin": "First name must be at least 2 characters long",
    "firstNameMax": "First name cannot be more than 50 characters long",
    "lastNameRequired": "Last name is a required field",
    "lastNameMin": "Last name must be at least 2 characters long",
    "lastNameMax": "Last name cannot be more than 50 characters long",
    "emailRequired": "Email is a required field",
    "emailInvalid": "Please enter a valid email address",
    "passwordRequired": "Password is a required field",
    "passwordMin": "Password must be at least 6 characters long",
    "passwordMax": "Password cannot be more than 30 characters long",
    "passwordComplexity": "Password must contain at least one uppercase letter, one lowercase letter, and one number",
    "eventTitleRequired": "Event title is a required field",
    "eventDateRequired": "Event date is a required field",
    "eventTimeRequired": "Event time is a required field",
    "eventUserRequired": "An associated user is required for the event",
    "invalidTimeFormat": "Invalid time format. Use 24-hour format (e.g., 18:00)",
    "vendorNameRequired": "Vendor name is a required field",
    "vendorCategoryRequired": "Vendor category is a required field",
    "vendorPhoneInvalid": "Please enter a valid phone number",
    "vendorPhoneRequired": "Vendor phone number is required",
    "invalidPhoneFormat": "Phone number can only contain digits.",
    "phoneRequired": "Phone number is required",
    "eventRequired": "Event is required",
    "userRequired": "User is required",
    "invalidEmail": "Invalid email address",
    "passwordTooShort": "Password is too short",
    "invalidDate": "Invalid date",
    "vendorRequired": "Vendor information is required",
    "emailNotExists": "Email does not exist in the system",
    "emailSendError": "An error occurred sending the email. Please try again later",
    "generalError": "An error occurred. Please try again later",
    "invalidDateFormat": "Invalid date format",
    "invalidReminderDateFormat": "Invalid reminder date format",
    "reminderBeforeDue": "Reminder date must be before due date",
    "budgetCategoryRequired": "Budget category is required",
    "budgetDescriptionRequired": "Expense description is required",
    "budgetAmountRequired": "Expense amount is required",
    "budgetAmountPositive": "Expense amount must be positive",
    "totalBudgetRequired": "Total budget is required",
    "totalBudgetPositive": "Total budget must be positive",
    "tableNotFound": "Table {{tableId}} not found",
    "tableOvercapacity": "Table {{tableName}} is over capacity: {{occupancy}}/{{capacity}}",
    "duplicateGuest": "Guest {{guestId}} has been assigned to multiple tables"
  },
  "guests": {
    "notFound": "Guest not found",
    "accessDenied": "Access denied to this guest",
    "createSuccess": "Guest added successfully",
    "updateSuccess": "Guest updated successfully",
    "deleteSuccess": "Guest deleted successfully",
    "rsvpUpdateSuccess": "Guest response updated successfully",
    "googleConnectionSuccess": "Connected to Google Contacts successfully",
    "googleDisconnectSuccess": "Disconnected from Google Contacts successfully",
    "groups": {
      "family": "family",
      "friends": "friends",
      "work": "work",
      "other": "other"
    },
    "gifts": {
      "eventNotPassed": "Gifts can only be added after the event has passed"
    },
    "errors": {
      "missingCode": "Missing Google authorization code",
      "googleConnectionError": "Error connecting to Google Contacts",
      "googleNotConnected": "Not connected to Google Contacts",
      "googleTokenExpired": "Google connection expired, reconnection required",
      "googleContactsFailed": "Failed to retrieve contacts from Google",
      "googleDisconnectFailed": "Error disconnecting from Google Contacts",
      "phoneNotFound": "Phone number not found in guest list"
    }
  },
  "budget": {
    "notFound": "Budget not found",
    "alreadyExists": "A budget already exists for this event",
    "expenseNotFound": "Expense not found",
    "expenseDeleteSuccess": "Expense deleted successfully"
  },
  "seating": {
    "tableName": "Table",
    "table": "Table {{number}}",
    "saveSuccess": "Seating arrangement saved successfully",
    "deleteSuccess": "Seating arrangement deleted successfully",
    "cloneSuccess": "Seating arrangement cloned successfully",
    "notFound": "Seating arrangement not found",
    "unknownTable": "Unknown table",
    "unknownGuest": "Unknown guest",
    "sync": {
      "createdForGuest": "Created for {{guestName}}",
      "createdForResize": "Created for resize",
      "movedForResize": "Moved due to resize",
      "stayedAtTable": "Stayed at the same table",
      "noAvailableTable": "No available table",
      "noTableForResize": "No table available for the new size",
      "guestNotSeated": "Guest was not seated",
      "arrangementOptimized": "Arrangement canceled for optimization",
      "keptAtOriginalTable": "Kept at original table",
      "optionGenerationError": "Error generating sync options",
      "changesProcessed": "Changes processed",
      "optionApplied": "Selected option applied"
    },
    "errors": {
      "fetchFailed": "Failed to load seating arrangement",
      "saveFailed": "Failed to save seating arrangement",
      "validationFailed": "Validation failed",
      "validationError": "Validation error",
      "noConfirmedGuests": "No confirmed guests",
      "noTables": "No tables available",
      "aiGenerationFailed": "Automatic seating generation failed",
      "invalidFormat": "Invalid format",
      "exportFailed": "Export failed",
      "targetAlreadyHasSeating": "Target event already has a seating arrangement"
    },
    "ai": {
      "generationSuccess": "Seating arrangement successfully generated by AI"
    },
    "export": {
      "title": "Seating Chart",
      "seatingChart": "Seating Chart"
    }
  }
}